@inject HttpClient _client

<EditForm Model="@userprofile" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>User: </label>
            <div>
                <InputSelect @bind-Value="userprofile.DatingAppUserId" class="form-control">
                    <option value="">-- Select User --</option>
                    @if (DatingAppUsers != null)
                    {
                        foreach (var datingappuser in DatingAppUsers)
                        {
                            <option value="@datingappuser.Id">@datingappuser.Username</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => userprofile.DatingAppUserId)" />
            </div>
        </div>
        <div class="form-group">
            <label>Favourite Song: </label>
            <div>
                <InputText @bind-Value="@userprofile.FavouriteAnimal" class="form-control" />
                <ValidationMessage For="@(() => userprofile.FavouriteAnimal)" />
            </div>
        </div>
        <div class="form-group">
            <label>Hobby: </label>
            <div>
                <InputText @bind-Value="@userprofile.Hobby" class="form-control" />
                <ValidationMessage For="@(() => userprofile.Hobby)" />
            </div>
        </div>
        <div class="form-group">
            <label>Height(cm): </label>
            <div>
                <InputNumber @bind-Value="@userprofile.Height" class="form-control" />
                <ValidationMessage For="@(() => userprofile.Height)" />
            </div>
        </div>
        <div class="form-group">
            <label>Weight(kg): </label>
            <div>
                <InputNumber @bind-Value="@userprofile.Weigth" class="form-control" />
                <ValidationMessage For="@(() => userprofile.Weigth)" />
            </div>
        </div>
        <div class="form-group">
            <label>Bio: </label>
            <div>
                <InputText @bind-Value="@userprofile.DatingAppUserDescription" class="form-control" />
                <ValidationMessage For="@(() => userprofile.DatingAppUserDescription)" />
            </div>
        </div>
    </fieldset>
    <br />
        @if (!Disabled)
        {
            <button type="submit" class=" btn btn-success btn-block">
                @ButtonText
            </button>
        }
        <BackToList Target="UserProfiles" />
</EditForm>
@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public UserProfile userprofile { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<DatingAppUser> DatingAppUsers;

    protected async override Task OnInitializedAsync()
    {
        DatingAppUsers = await _client.GetFromJsonAsync<List<DatingAppUser>>($"{Endpoints.DatingAppUsersEndpoint}");
    }

}
