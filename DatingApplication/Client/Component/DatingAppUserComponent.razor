@inject HttpClient _client

<EditForm Model="@datingappuser" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
        <div class="form-group">
            <label>Profile Picture: </label>
            <div>
                <img src="@datingappuser.profile_picture_url" style="width: 250px; height: 250px;">
                <br />
                <InputFile OnChange="@OnInputFileChanged"></InputFile>
            </div>
        </div>
        <div class="form-group">
            <label>Name: </label>
            <div>
                <InputText @bind-Value="@datingappuser.Username" class="form-control"/>
                <ValidationMessage For="@(()=> datingappuser.Username)"/>
            </div>
        </div>
        <div class="form-group">
            <label>Age: </label>
            <div>
                <InputNumber @bind-Value="@datingappuser.Age" class="form-control" />
                <ValidationMessage For="@(()=> datingappuser.Age)" />
            </div>
        </div>
            <div class="form-group">
            <label>Gender: </label>
            <div>
                <InputSelect @bind-Value="@datingappuser.Gender" class="form-control">
                    <option value="">--Select Option--</option>
                    <option value="Male">Male</option>
                    <option value="Female">Female</option>
                </InputSelect>
                <ValidationMessage For="@(()=> datingappuser.Gender)" />
            </div>
        </div>
        <div class="form-group">
            <label>Email: </label>
            <div>
                <InputText @bind-Value="@datingappuser.Email" class="form-control" />
                <ValidationMessage For="@(()=> datingappuser.Email)" />
            </div>
        </div>
        <div class="form-group">
            <label>Password: </label>
            <div>
                <InputText @bind-Value="@datingappuser.Password" class="form-control" />
                <ValidationMessage For="@(()=> datingappuser.Password)" />
            </div>
        </div>
        <br />
    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <br />
     <BackToList Target="DatingAppUsers" /> 
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public DatingAppUser datingappuser { get; set; } = new DatingAppUser();
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<DatingAppUser>? DatingAppUsers;
    private IList<Match>? Matches;
    private IList<UserProfile>? UserProfiles;


    protected async override Task OnInitializedAsync()
    {
        DatingAppUsers = await _client.GetFromJsonAsync<List<DatingAppUser>>(Endpoints.DatingAppUsersEndpoint);
        Matches = await _client.GetFromJsonAsync<List<Match>>(Endpoints.MatchesEndpoint);
        UserProfiles = await _client.GetFromJsonAsync<List<UserProfile>>(Endpoints.UserProfilesEndpoint);
    }


    private async Task OnInputFileChanged(InputFileChangeEventArgs inputFileChangeEvent)
    {
        var file = inputFileChangeEvent.File;
        var buffer = new byte[file.Size];
        await file.OpenReadStream().ReadAsync(buffer);

        datingappuser.profile_picture_url = $"data:image/png;base64,{Convert.ToBase64String(buffer)}";
    }

}
